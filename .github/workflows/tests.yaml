name: test
on:
  push:
    branches:
      - "main"
      - "feature/*"
      - "hotfix/*"
      - "release/*"
      - "renovate/*"
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Begin installs
        run: |
          sudo make start-snap-install
      - name: conventional commits
        uses: webiny/action-conventional-commits@v1.3.0
        with:
          allowed-commit-types: "build,chore,ci,docs,feat,fix,perf,refactor,style,test"
      - name: Finish installs
        run: |
          sudo make finish-snap-install
      - name: Run Linters
        run: |
          make -k lint
  unit:
    strategy:
      matrix:
        platform: [ubuntu-22.04, ubuntu-24.04, windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Begin installs (Linux)
        run: |
          sudo make start-snap-install
        if: ${{ runner.os == 'Linux' }}
      - name: Install tools (Mac)
        if: ${{ runner.os == 'macOS' }}
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install tools (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: |
            3.10
            3.11
            3.12
            3.13-dev
      - name: Finish installs (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo make finish-snap-install
      - name: Test
        shell: bash
        run: |
          for version in 3.10 3.11 3.12 3.13; do
            python_path=$(which python$version)
            make test-unit UV_PYTHON=$python_path
          done
        env:
          PYTEST_ADDOPTS: "--no-header -vv -rN"
      - name: Upload code coverage
        uses: codecov/codecov-action@v4
        with:
          name: unit-coverage
          path: .coverage*.xml
      - name: Upload test results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results-${{ matrix.platform }}
          path: .results.*.xml
  integration:
    strategy:
      matrix:
        platform: [ubuntu-22.04, ubuntu-24.04, windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Begin installs (Linux)
        run: |
          sudo make start-snap-install
        if: ${{ runner.os == 'Linux' }}
      - name: Install tools (Mac)
        if: ${{ runner.os == 'macOS' }}
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install tools (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: |
            3.10
            3.11
            3.12
            3.13-dev
          cache: 'pip'
      - name: Finish installs (Linux)
        run: |
          sudo make finish-snap-install
        if: ${{ runner.os == 'Linux' }}
      - name: Test
        shell: bash
        run: |
          for version in 3.10 3.11 3.12 3.13; do
            python_path=$(which python$version)
            make test-integration UV_PYTHON=$python_path
          done
        env:
          PYTEST_ADDOPTS: "--no-header -vv -rN"
      - name: Upload code coverage
        uses: codecov/codecov-action@v4
        with:
          name: unit-coverage
          path: .coverage*.xml
      - name: Upload test results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results-${{ matrix.platform }}
          path: .results.*.xml
